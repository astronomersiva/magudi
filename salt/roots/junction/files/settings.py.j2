import os

from common import SITE_VARIABLES
BASE_DIR = os.path.dirname(os.path.dirname(__file__))

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{ db["name"] }}',
        'USER': '{{ db["user"] }}',
        'PASSWORD': '{{ db["password"] }}',
        'HOST': 'localhost',
    }
}

#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

DEBUG = False

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST_USER = 'pssi'
EMAIL_HOST_PASSWORD = '{{ email_host_password }}'

ALLOWED_HOSTS = ['pycon.local.org', 'in.pycon.org', 'pycon.pssi.org.in',
                 '127.0.0.1']


ADMINS = ({%for name, email in admins.items() %}
       ('{{name}}', '{{email}}'), {% endfor %}
)

ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'

SOCIALACCOUNT_QUERY_EMAIL = True

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': ("[%(asctime)s] %(levelname)s "
                       "[%(module)s:%(name)s:%(lineno)s] %(message)s"),
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose'
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'mail_admins'],
            'level': 'INFO',
        },
    }
}

# SITE_URL = "http://{{pillar['junction']['host']}}/cfp/"
STATIC_URL = '/cfp/static/'
MEDIA_URL = '/cfp/m/'
FORCE_SCRIPT_NAME = '/cfp'
LOGIN_REDIRECT_URL = FORCE_SCRIPT_NAME

LOGIN_URL = FORCE_SCRIPT_NAME + '/accounts/login/'
LOGOUT_URL = FORCE_SCRIPT_NAME + '/accounts/logout/'

SITE_VARIABLES.update({
    'site_name': 'PyCon India',
    'site_description': 'Submit and Manage proposals for pycon india',
    'google_analytics_id': '{{pillar['junction']['google_analytics_id']}}',
})

EXPLARA_API_TOKEN = '{{pillar['junction']['explara_api_token']}}'
QR_CODES_DIR = '{{pillar['junction']['qr_codes_dir']}}'

USE_ASYNC_FOR_EMAIL=True

# settings for celery
BROKER_URL = os.environ.get("BROKER_URL", "redis://redis:6379/0")
CELERY_RESULT_BACKEND = os.environ.get("CELERY_RESULT_BACKEND", 'redis://redis:6379/0')
